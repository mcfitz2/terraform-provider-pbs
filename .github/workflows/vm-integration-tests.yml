name: VM Integration Tests

# This workflow runs the FULL integration test suite on a self-hosted VM runner.
# It covers core datastore (directory/removable), metrics, jobs, notifications, and
# S3 integration tests when cloud credentials are available.
#
# Code coverage is collected during test runs and reported via Codecov.
# Coverage annotations will appear on pull requests showing which lines are covered.
# Coverage reports and trends are available at https://codecov.io

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    # Run weekly on Sunday at 2 AM UTC to test with full VM
    - cron: '0 2 * * 0'

jobs:
  vm-integration-tests:
    name: VM Integration Tests (PBS 4.0)
    runs-on: self-hosted
    timeout-minutes: 45
    
    # Service containers for testing - exposed on host network
    services:
      influxdb:
        image: influxdb:2.7-alpine
        ports:
          - 8086:8086
        env:
          DOCKER_INFLUXDB_INIT_MODE: setup
          DOCKER_INFLUXDB_INIT_USERNAME: admin
          DOCKER_INFLUXDB_INIT_PASSWORD: testpass123
          DOCKER_INFLUXDB_INIT_ORG: testorg
          DOCKER_INFLUXDB_INIT_BUCKET: pbs-metrics
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: test-token-for-pbs-provider
        options: >-
          --health-cmd "influx ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      influxdb-udp:
        image: influxdb:1.8
        ports:
          - 8089:8089/udp
        env:
          INFLUXDB_UDP_ENABLED: true
          INFLUXDB_UDP_BIND_ADDRESS: :8089
          INFLUXDB_UDP_DATABASE: udp
        options: >-
          --health-cmd "influx -execute 'SHOW DATABASES'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      gotify:
        image: gotify/server:latest
        ports:
          - 8080:80
        env:
          GOTIFY_DEFAULTUSER_NAME: admin
          GOTIFY_DEFAULTUSER_PASS: admin
        options: >-
          --health-cmd "curl -f http://localhost:80/health || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      webhook-receiver:
        image: tarampampam/webhook-tester:latest
        ports:
          - 8081:8080
        env:
          LISTEN_ADDR: 0.0.0.0
          LISTEN_PORT: 8080
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.10'
        cache: true

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.7"
        terraform_wrapper: false

    - name: Download dependencies
      run: go mod download

    - name: Build provider binary
      run: go build .

    - name: Get runner IP address
      id: get_ip
      run: |
        # Get the IP address of the runner on the local network
        RUNNER_IP=$(hostname -I | awk '{print $1}')
        echo "Runner IP: $RUNNER_IP"
        echo "RUNNER_IP=$RUNNER_IP" >> $GITHUB_OUTPUT

    - name: Run integration tests
      env:
        # PBS Server configuration
        PBS_ADDRESS: "https://192.168.1.108:8007"
        PBS_USERNAME: "root@pam"
        PBS_PASSWORD: "pbspbs123"
        PBS_INSECURE_TLS: "true"
        TF_ACC: "1"
        # Test service endpoints - use runner's IP so PBS can reach them
        TEST_INFLUXDB_HOST: ${{ steps.get_ip.outputs.RUNNER_IP }}
        TEST_INFLUXDB_PORT: "8086"
        TEST_INFLUXDB_UDP_HOST: ${{ steps.get_ip.outputs.RUNNER_IP }}
        TEST_INFLUXDB_UDP_PORT: "8089"
        TEST_INFLUXDB_ORG: "testorg"
        TEST_INFLUXDB_BUCKET: "pbs-metrics"
        TEST_INFLUXDB_TOKEN: "test-token-for-pbs-provider"
        TEST_GOTIFY_HOST: ${{ steps.get_ip.outputs.RUNNER_IP }}
        TEST_GOTIFY_PORT: "8080"
        TEST_GOTIFY_TOKEN: "AqQR.Oq8ZqYJ4"
        TEST_WEBHOOK_HOST: ${{ steps.get_ip.outputs.RUNNER_IP }}
        TEST_WEBHOOK_PORT: "8081"
        # S3 provider credentials from secrets (optional for S3 tests)
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ vars.AWS_REGION || 'us-west-2' }}
        B2_ACCESS_KEY_ID: ${{ secrets.B2_ACCESS_KEY_ID }}
        B2_SECRET_ACCESS_KEY: ${{ secrets.B2_SECRET_ACCESS_KEY }}
        B2_REGION: ${{ vars.B2_REGION || 'us-west-004' }}
        SCALEWAY_ACCESS_KEY: ${{ secrets.SCALEWAY_ACCESS_KEY }}
        SCALEWAY_SECRET_KEY: ${{ secrets.SCALEWAY_SECRET_KEY }}
        SCALEWAY_REGION: ${{ vars.SCALEWAY_REGION || 'fr-par' }}
      run: |
        echo "Running FULL integration test suite against PBS 4.0 at 192.168.1.108..."
        echo ""
        echo "Runner IP: ${{ steps.get_ip.outputs.RUNNER_IP }}"
        echo ""
        echo "Test services available (PBS can reach these at runner IP):"
        echo "  - InfluxDB 2.7 (HTTP): ${{ steps.get_ip.outputs.RUNNER_IP }}:8086"
        echo "  - InfluxDB 1.8 (UDP): ${{ steps.get_ip.outputs.RUNNER_IP }}:8089"
        echo "  - Gotify: ${{ steps.get_ip.outputs.RUNNER_IP }}:8080"
        echo "  - Webhook: ${{ steps.get_ip.outputs.RUNNER_IP }}:8081"
        echo ""
        echo "Test Suites:"
        echo "  ✓ Core Integration Tests (Directory & Removable Datastores, Metrics, Jobs, Notifications)"
        echo "  ✓ S3 Integration Tests (AWS, B2, Scaleway - if credentials provided)"
        echo ""
        
        # Run ALL integration tests
        go test -v -timeout 40m -coverprofile=coverage-vm-integration.out -covermode=atomic ./test/integration

    - name: Upload coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-vm-integration
        path: coverage-vm-integration.out
        retention-days: 7

    - name: Report coverage
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage-vm-integration.out
        flags: vm-integration-tests
        name: vm-integration-coverage

    - name: Upload test logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: vm-test-logs-pbs-4.0
        path: |
          test/integration/*.log
          terraform.log
        retention-days: 7