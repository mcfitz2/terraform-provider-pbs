# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Use Debian 12 (Bookworm) which is the base for PBS
  config.vm.box = "debian/bookworm64"
  
  # Disable default synced folder (not needed for PBS VM, avoids NFS issues in CI)
  config.vm.synced_folder ".", "/vagrant", disabled: true
  
  # PBS VM configuration
  config.vm.define "pbs" do |pbs|
    pbs.vm.hostname = "pbs-test"
    
    # Network configuration - forward PBS web interface
    pbs.vm.network "forwarded_port", guest: 8007, host: 8007, host_ip: "127.0.0.1"
    
    # VM resources - PBS needs reasonable resources
    # VirtualBox provider (for local development on macOS/Windows)
    pbs.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 2
      vb.name = "pbs-test-vm"
      
      # Create a virtual disk for ZFS pool (4GB)
      # This will be used to create a ZFS pool for testing
      unless File.exist?("./zfs-disk.vdi")
        vb.customize ['createhd', '--filename', './zfs-disk.vdi', '--size', 4096]
      end
      vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', './zfs-disk.vdi']
    end
    
    # Libvirt provider (for Linux/GitHub Actions with KVM support)
    pbs.vm.provider "libvirt" do |lv|
      lv.memory = 2048
      lv.cpus = 2
      lv.machine_type = "q35"
      lv.cpu_mode = "host-passthrough"
      
      # Create a virtual disk for ZFS pool (4GB)
      lv.storage :file, :size => '4G', :device => 'vdb', :allow_existing => true
    end
    
    # Two-stage provision with reboot
    # Stage 1: Upgrade kernel
    pbs.vm.provision "shell", path: "provision-pbs.sh", run: "once"
  end
end
